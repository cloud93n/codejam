import time,sys
start_time = time.time()

from collections import deque
from collections import Counter


def inp():
    return int(input())

def inpli():
    return list(map(int, input().split()))

def inpls():
    return input().split()

def isValid(s1,s2):
    stot = s1+s2
    cs = Counter(stot)
    
    for i in range(len(stot)-1):
        if cs[stot[i]] != 1 and stot[i] != stot[i+1]:
            return False
        cs[stot[i]]-=1

    return True

def solve():
    N = inp()
    S = inpls()
    q = deque()
    s = ''.join(S)
    c = Counter(s)
    dp = [[0]*N for _ in range(N)]

    for i in range(N):
        for j in range(N):
            if i==j:
                dp[i][j]=0
            elif isValid(S[i],S[j]):
                dp[i][j] = 1
            else:
                dp[i][j] = 0
    
    maxr = 0
    sumr = [0]*N
    for i in range(N):
        maxr = max(maxr,sum(dp[i]))
        sumr = [sum(x) for x in zip(sumr, dp[i])]

    print(sumr)
    print(maxr)


    # if maxr < N-1:
    #     return "IMPOSSIBLE"
    # else:
    #      return 

        
    
    

T=inp()
for i in range(T):
    result = solve()
    print('Case #{}: {}'.format(i+1,result))

print('Time_elapsed :',time.time()-start_time,' s')